{% block form %}
    {{ sonata_block_render_event('sonata.admin.edit.form.top', { 'admin': admin, 'object': object }) }}

    {% set url = admin.id(object) is not null ? 'edit' : 'create' %}

    {% if not admin.hasRoute(url)%}

        <div>
            {{ "form_not_available"|trans({}, "SonataAdminBundle") }}
        </div>

    {% else %}
        <script type="text/javascript" src="{{ asset('bundles/app/js/node_modules/jquery-bootgrid/dist/jquery.bootgrid.js') }}"></script>
        <link href="{{ asset('bundles/app/js/node_modules/jquery-bootgrid/dist/jquery.bootgrid.css') }}" rel="stylesheet">
        <script>
            $(function() {
                $( "#tabs_Amostra" ).tabs( { active: 0 });
                $( "#tabs2" ).tabs();

            });
        </script>
        <div id="tabs_Amostra">
            <ul>
                <li><a href="#tabs-1">{{ "Identificação"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
                <li><a href="#tabs-2">{{ "Parâmetros"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
                <li><a href="#tabs-3">{{ "Ciclo de Vida"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
            </ul>
            <div id="tabs-1">
                <form class=""
                      {% if admin_pool.getOption('form_type') == 'horizontal' %}class="form-horizontal"{% endif %}
                      role="form"
                      action="{{ admin.generateUrl(url, {'id': admin.id(object), 'uniqid': admin.uniqid, 'subclass': app.request.get('subclass')}) }}" {{ form_enctype(form) }}
                      method="POST"
                        {% if not admin_pool.getOption('html5_validate') %}novalidate="novalidate"{% endif %}
                        >
                    {% if form.vars.errors|length > 0 %}
                        <div class="sonata-ba-form-error">
                            {{ form_errors(form) }}
                        </div>
                    {% endif %}

                    {% block sonata_pre_fieldsets %}
                    <div class="row">
                        {% endblock %}
                        {% block sonata_tab_content %}
                            {% set has_tab = ((admin.formtabs|length == 1 and admin.formtabs|keys[0] != 'default') or admin.formtabs|length > 1 ) %}

                            <div class="col-md-12">
                                {% if has_tab %}
                                    <div class="nav-tabs-custom">
                                        <ul class="nav nav-tabs" role="tablist">
                                            {% for name, form_tab in admin.formtabs %}
                                                <li{% if loop.index == 1 %} class="active"{% endif %}><a href="#tab_{{ loop.index }}" data-toggle="tab"><span class="glyphicon glyphicon-exclamation-sign has-errors hide"></span> {{ admin.trans(name, {}, form_tab.translation_domain) }}</a></li>
                                            {% endfor %}
                                        </ul>
                                        <div class="tab-content">
                                            {% for code, form_tab in admin.formtabs %}
                                                <div class="tab-pane fade{% if loop.first %} in active{% endif %}" id="tab_{{ loop.index }}">
                                                    <div class="box-body  container-fluid">
                                                        <div class="sonata-ba-collapsed-fields">

                                                            {% if form_tab.description != false %}
                                                                <p>{{ form_tab.description|raw }}</p>
                                                            {% endif %}

                                                            {{ form_helper.render_groups(admin, form, form_tab['groups'], has_tab) }}
                                                        </div>
                                                    </div>
                                                </div>
                                            {% endfor %}
                                        </div>
                                    </div>
                                {% else %}

                                    {{ form_helper.render_groups(admin, form, admin.formtabs['default'].groups, has_tab) }}
                                {% endif %}
                            </div>
                        {% endblock %}
                        {% block sonata_post_fieldsets %}
                    </div>
                    {% endblock %}

                    {{ form_rest(form) }}

                    {% block formactions %}
                        <div class="well well-small form-actions">
                            {% if app.request.isxmlhttprequest %}
                                {% if admin.id(object) is not null %}

                                    <button type="submit" class="btn btn-success" name="btn_update"><i class="fa fa-save"></i> {{ 'btn_update'|trans({}, 'SonataAdminBundle') }}</button>
                                {% else %}

                                    <button type="submit" class="btn btn-success" name="btn_create"><i class="fa fa-plus-circle"></i> {{ 'btn_create'|trans({}, 'SonataAdminBundle') }}</button>
                                {% endif %}
                            {% else %}
                                {% if admin.supportsPreviewMode %}
                                    <button class="btn btn-info persist-preview" name="btn_preview" type="submit">
                                        <i class="fa fa-eye"></i>
                                        {{ 'btn_preview'|trans({}, 'SonataAdminBundle') }}
                                    </button>
                                {% endif %}
                                {% if admin.id(object) is not null %}

                                    <button type="submit" class="btn btn-success" name="btn_update_and_edit"><i class="fa fa-save"></i> {{ 'btn_update_and_edit_again'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% if admin.hasroute('list') and admin.isGranted('LIST') %}
                                        <button type="submit" class="btn btn-success" name="btn_update_and_list"><i class="fa fa-save"></i> <i class="fa fa-list"></i> {{ 'btn_update_and_return_to_list'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}

                                    {% if admin.hasroute('delete') and admin.isGranted('DELETE', object) %}
                                        <a class="btn btn-danger" href="{{ admin.generateObjectUrl('delete', object) }}"><i class="fa fa-minus-circle"></i> {{ 'link_delete'|trans({}, 'SonataAdminBundle') }}</a>

                                        {% set currentPath = path(app.request.attributes.get('_route'),
                                        app.request.attributes.get('_route_params')) %}

                                        <a target="_blank" class="btn generateworklist" href="/generateworklist/{{ admin.id(object)  }}"><i class="fa fa-minus-circle"></i> Gerar lista de trabalho</a>
                                        <a target="_blank" class="btn generateworklist" href="/completesample/{{ admin.id(object)  }}"><i class="fa fa-minus-circle"></i> Autorizar </a>
                                        <a target="_blank" class="btn generateworklist" href="/reopensample/{{ admin.id(object)  }}"><i class="fa fa-minus-circle"></i> Desautorizar </a>
                                        <a target="_blank" class="btn generateworklist" href="/cancelsample/{{ admin.id(object)  }}"><i class="fa fa-minus-circle"></i> Cancelar </a>
                                        <a target="_blank" class="btn generateworklist" href="/notifysample/{{ admin.id(object)  }}"><i class="fa fa-minus-circle"></i> Notificar Cliente </a>


                                    {% endif %}

                                    {% if admin.isAclEnabled() and admin.hasroute('acl') and admin.isGranted('MASTER', object) %}
                                        <a class="btn btn-info" href="{{ admin.generateObjectUrl('acl', object) }}"><i class="fa fa-users"></i> {{ 'link_edit_acl'|trans({}, 'SonataAdminBundle') }}</a>
                                    {% endif %}
                                {% else %}
                                    {% if admin.hasroute('edit') and admin.isGranted('EDIT') %}
                                        <button class="btn btn-success" type="submit" name="btn_create_and_edit"><i class="fa fa-save"></i> {{ 'btn_create_and_edit_again'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}
                                    {% if admin.hasroute('list') and admin.isGranted('LIST') %}
                                        <button type="submit" class="btn btn-success" name="btn_create_and_list"><i class="fa fa-save"></i> <i class="fa fa-list"></i> {{ 'btn_create_and_return_to_list'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}
                                    <button class="btn btn-success" type="submit" name="btn_create_and_create"><i class="fa fa-plus-circle"></i> {{ 'btn_create_and_create_a_new_one'|trans({}, 'SonataAdminBundle') }}</button>
                                {% endif %}
                            {% endif %}
                        </div>
                    {% endblock formactions %}
                </form>
            </div>
            <div id="tabs-2">
                <div class="row">
                    <div class="col-md-6">
                        <table id="parametros_grid" class="table table-condensed table-hover table-striped">
                            <thead>
                            <tr>
                                <th data-width="60" data-column-id="id" data-type="numeric" data-identifier="true">ID</th>
                                <th data-width="40" data-column-id="ft_codigo" data-type="numeric" >E</th>
                                <th data-column-id="resultado">Parâmetro</th>
                                <th data-column-id="parametros" >Resultado</th>
                                <th data-column-id="ft_formatado">Valor</th>
                                <th data-column-id="unidades">Unidades</th>
                                <th data-column-id="ft_texto_relatorio">Limite</th>
                            </tr>
                            </thead>
                        </table>

                        <div class="NewParaDiv"></div>
                        <a target="_blank" class="btn generateworklist" onclick="AddParaActions()"><i class="fa fa-minus-circle"></i> Adicionar </a>

                    </div>
                    <div class="col-md-6">
                        <div id="tabs2">
                            <ul>
                                <li><a href="#tabs-4">{{ "Geral"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
                                <li><a href="#tabs-5">{{ "Resultado"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
                                <li><a href="#tabs-6">{{ "Ciclo de Vida"|convert_encoding('UTF-8', ' iso-8859-1') }}</a></li>
                            </ul>
                            <div id="tabs-4">

                            </div>
                            <div id="tabs-5">
                                <h3>Resultado:</h3>
                                <div class="checkbox disabled">
                                    <label>
                                        <input type="checkbox" value="" disabled>
                                        Incluir no relatorio
                                    </label>
                                </div>
                                <div class="checkbox disabled">
                                    <label>
                                        <input type="checkbox" value="" disabled>
                                        Valor Calculado
                                    </label>
                                </div>
                                <label>

                                    Unidade de Medida
                                </label>
                                <div class="NewUnidadesDiv"></div>

                                <div class="form-group">
                                    <label for="_valororiginal">Original</label>
                                    <input type="text" class="form-control" id="_valororiginal" >
                                    <label for="_valorformatado">formatado</label>
                                    <input type="text" class="form-control" id="_valorformatado" disabled>
                                    <label for="_valorcalculado">Calculado</label>
                                    <input type="text" class="form-control" id="_valorcalculado" disabled>
                                    <label for="_valor">Valor</label>
                                    <input type="text" class="form-control" id="_valor" disabled>
                                    <input type="text" class="form-control" id="_sinal"  disabled>
                                    <label for="_conclusao">Conclusão</label>
                                    <input type="text" class="form-control" id="_conclusao" disabled>


                                </div>


                            </div>
                            <div id="tabs-6">
                                <div class="table-padding">
                                    <table class="hover table_ciclo_para">
                                        <thead>
                                        <tr>
                                            <th width="100">Estado</th>
                                            <th width="100">Data</th>
                                            <th width="150">Utilizador</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                    </div>
                </div>



                </div>
                <div class="row">
                    <a target="_blank" class="btn generateworklist" onclick="UpdateParaActions('/app_dev.php/completepara')"><i class="fa fa-minus-circle"></i> Autorizar </a>
                    <a target="_blank" class="btn generateworklist" onclick="UpdateParaActions('/app_dev.php/reopenpara')"><i class="fa fa-minus-circle"></i> Desautorizar </a>
                    <a target="_blank" class="btn generateworklist" onclick="UpdateParaActions('/app_dev.php/cancelpara')"><i class="fa fa-minus-circle"></i> Eliminar</a>
                </div>
            </div>
            <div id="tabs-3">
                <script>
                    var rowIds = [];
                    var selectedRows = [];
                    var _lastSelectedRow = 0;
                    var _ParaData = [];

                    function AddParaActions(){
                        if(typeof $('.NewPara').select2('data').id != 'undefined' && $('.NewPara').select2('data').id != ""){
                            $.ajax({
                                type: "POST",
                                url: '/app_dev.php/addpara',
                                data: {idpara: $('.NewPara').select2('data').id , idamostra : {{ admin.id(object)  }}},
                                contentType: "application/json",
                                success: function(data) {
                                    alert(data);
                                    $("#parametros_grid").bootgrid("destroy");
                                    GetParametros();

                                }
                            });
                        }
                    }
                    function UpdateParaActions(URL){
                        var _old = rowIds.slice(0);
                        $.each(_ParaData, function( index, value ) {
                            $.each(rowIds, function( index1, value1 ) {
                                if(URL.indexOf("completepara")>= 0){
                                    if(value.id == value1){
                                        if(value.ft_codigo == "C"){
                                            rowIds.splice(index1,1);
                                        }
                                    }
                                }
                                if(URL.indexOf("reopenpara")>= 0){
                                    if(value.id == value1){
                                        if(value.ft_codigo == "D"){
                                            rowIds.splice(index1,1);
                                        }
                                    }
                                }
                                if(URL.indexOf("cancelpara")>= 0){
                                    if(value.id == value1){
                                        if(value.ft_codigo == "X"){
                                            rowIds.splice(index1,1);
                                        }
                                    }
                                }
                            });
                        });

                        if(rowIds.length != 0){
                            $.ajax({
                                type: "POST",
                                url: URL,
                                data: JSON.stringify(rowIds),
                                contentType: "application/json",
                                success: function(data) {
                                    $("#parametros_grid").bootgrid("destroy");
                                    rowIds.length = 0;
                                    GetParametros();

                                }
                            });
                        }
                        rowIds = _old;

                    }
                    function GetParametros(){
                        $.ajax({
                            type: "POST",
                            url: '{{path('AmostrasGetParametros')}}',
                            data: {data: {{ admin.id(object)  }} },
                            success: function(data) {

                                var grid_para = $("#parametros_grid").bootgrid({
                                    navigation:0,
                                    selection: true,
                                    multiSelect: true,
                                    rowSelect: true,
                                    keepSelection: true
                                }).on("selected.rs.jquery.bootgrid", function(e, rows)
                                {
                                    for (var i = 0; i < rows.length; i++)
                                    {
                                        rowIds.push(rows[i].id);
                                    }
                                }).on("deselected.rs.jquery.bootgrid", function(e, rows)
                                {
                                    for (var i = 0; i < rows.length; i++)
                                    {
                                        $.each(rowIds, function( index, value ) {
                                            if(value == rows[i].id){
                                                rowIds.splice(index,1);
                                            }
                                        });


                                    }
                                }).on("click.rs.jquery.bootgrid", function (e,rows,row)
                                {

                                    GetCicloPorParametro(row.idparametro);
                                    GetResultadoPorParametro(row.idparametro);
                                    selectedRows = rows;
                                });
                                var obj = $.parseJSON(data);
                                _ParaData= obj;
                                if (obj.length != 0) {
                                    grid_para.bootgrid("append",obj );
                                    $.each(obj, function (key, value) {

                                    });
                                } else {

                                }
                            }
                        });
                    }
                    function GetAllPara(){
                        $.ajax({
                            type: "POST",
                            url: "/app_dev.php/GetAllPara",
                            dataType: 'json',
                            success: function(data) {
                                $('.NewParaDiv').append("<select  class='NewPara'></select>");

                                $.each(data, function(index, value) {
                                    $('.NewPara').append(
                                            '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                                    );
                                });
                                $(".NewPara").select2();
                            }
                        });
                    }
                    function GetAllUnidades(){
                        $.ajax({
                            type: "POST",
                            url: "{{ path('GetAllUnidadesMedida') }}",
                            dataType: 'json',
                            success: function(data) {
                                $('.NewUnidadesDiv').append("<select  class='NewUnidades'></select>");
                                $.each(data, function(index, value) {
                                    $('.NewUnidades').append(
                                            '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                                    );
                                });
                                $(".NewUnidades").select2();
                            }
                        });
                    }
                    function GetCicloPorParametro(_id_Para){

                        $.ajax({
                            type: "POST",
                            url: '{{path('AmostrasGetCicloVidaPorPara')}}',
                            data: {data: _id_Para  },
                            success: function(data) {
                                $('.table_ciclo_para tbody').html("");
                                var obj = $.parseJSON(data);
                                if (obj.length != 0) {
                                    var html = "";
                                    var estado = "";
                                    var bullet = "";
                                    $.each(obj, function (key, value) {
                                        if(value.ft_id_estado == 'I'){
                                            estado = 'Indisponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'V'){
                                            estado = 'Disponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'D'){
                                            estado = 'Em Progresso';
                                            bullet = "bullet-yellow";
                                        }
                                        if(value.ft_id_estado == 'P'){
                                            estado = 'Planeada';
                                            bullet = "bullet-blue";
                                        }
                                        if(value.ft_id_estado == 'C'){
                                            estado = 'Completo';
                                            bullet = "bullet-green";
                                        }
                                        if(value.ft_id_estado == 'X'){
                                            estado = 'Cancelada';
                                            bullet = "bullet-pink";
                                        }
                                        html += '<tr><td><span class="'+ bullet +'"></span>'+ estado +'</td><td>'+ value.date  +'</td><td>'+value.user +'</td></tr>'

                                    });
                                    $('.table_ciclo_para tbody').append(html);
                                } else {

                                }
                            }
                        });
                    }
                    function GetResultadoPorParametro(_id_Para){

                        $.ajax({
                            type: "POST",
                            url: '{{path('AmostrasGetUnidadePorPara')}}',
                            data: {data: _id_Para  },
                            success: function(data) {
                                $('.table_ciclo_para tbody').html("");
                                var obj = $.parseJSON(data);
                                if (obj.length != 0) {
                                    var html = "";
                                    var estado = "";
                                    var bullet = "";
                                    $.each(obj, function (key, value) {
                                        if(value.ft_id_estado == 'I'){
                                            estado = 'Indisponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'V'){
                                            estado = 'Disponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'D'){
                                            estado = 'Em Progresso';
                                            bullet = "bullet-yellow";
                                        }
                                        if(value.ft_id_estado == 'P'){
                                            estado = 'Planeada';
                                            bullet = "bullet-blue";
                                        }
                                        if(value.ft_id_estado == 'C'){
                                            estado = 'Completo';
                                            bullet = "bullet-green";
                                        }
                                        if(value.ft_id_estado == 'X'){
                                            estado = 'Cancelada';
                                            bullet = "bullet-pink";
                                        }
                                        html += '<tr><td><span class="'+ bullet +'"></span>'+ estado +'</td><td>'+ value.date  +'</td><td>'+value.user +'</td></tr>'

                                    });
                                    $('.table_ciclo_para tbody').append(html);
                                } else {

                                }
                            }
                        });
                    }


                    $( document ).ready(function() {

                        $.ajax({
                            type: "POST",
                            url: '{{path('AmostrasGetCicloVida')}}',
                            data: {data: {{ admin.id(object)  }} },
                            success: function(data) {
                                var obj = $.parseJSON(data);
                                if (obj.length != 0) {
                                    var html = "";
                                    var estado = "";
                                    var bullet = "";
                                    $.each(obj, function (key, value) {
                                        if(value.ft_id_estado == 'I'){
                                            estado = 'Indisponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'V'){
                                            estado = 'Disponivel';
                                            bullet = "bullet-gray";
                                        }
                                        if(value.ft_id_estado == 'D'){
                                            estado = 'Em Progresso';
                                            bullet = "bullet-yellow";
                                        }
                                        if(value.ft_id_estado == 'P'){
                                            estado = 'Planeada';
                                            bullet = "bullet-blue";
                                        }
                                        if(value.ft_id_estado == 'C'){
                                            estado = 'Completo';
                                            bullet = "bullet-green";
                                        }
                                        if(value.ft_id_estado == 'X'){
                                            estado = 'Cancelada';
                                            bullet = "bullet-pink";
                                        }
                                        html += '<tr><td><span class="'+ bullet +'"></span>'+ estado +'</td><td>'+ value.updated_by_time +'</td><td>'+value.updated_by +'</td></tr>'

                                    });
                                    $('.table_ciclo tbody').append(html);
                                } else {

                                }
                            }
                        });
                        GetParametros();
                        GetAllPara();
                        GetAllUnidades();
                    });


                </script>

                <div class="table-padding">
                    <table class="hover table_ciclo">
                        <thead>
                        <tr>
                            <th width="100">Estado</th>
                            <th width="100">Data</th>
                            <th width="150">Utilizador</th>
                        </tr>
                        </thead>
                        <tbody>


                        </tbody>
                    </table>
                </div>

            </div>
        </div>




    {% endif%}

    {{ sonata_block_render_event('sonata.admin.edit.form.bottom', { 'admin': admin, 'object': object }) }}

{% endblock %}
