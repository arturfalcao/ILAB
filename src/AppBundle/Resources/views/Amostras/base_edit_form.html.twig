{% block form %}
    {{ sonata_block_render_event('sonata.admin.edit.form.top', { 'admin': admin, 'object': object }) }}

    {% set url = admin.id(object) is not null ? 'edit' : 'create' %}

    {% if not admin.hasRoute(url)%}

        <div>
            {{ "form_not_available"|trans({}, "SonataAdminBundle") }}
        </div>

    {% else %}
        <script type="text/javascript" src="{{ asset('bundles/app/js/node_modules/jquery-bootgrid/dist/jquery.bootgrid.js') }}"></script>
        <link href="{{ asset('bundles/app/js/node_modules/jquery-bootgrid/dist/jquery.bootgrid.css') }}" rel="stylesheet">
        <script>
            $(function() {
                $( "#tabs_Amostra" ).tabs( { active: 2 });
                $( "#tabs2" ).tabs({ active: 2 });

            });
        </script>
        <script>

            var rowIds = [];
            var selectedRows = [];
            var _lastSelectedRow = 0;
            var _ParaData = [];
            var _oldoriginalvalue = 0;

            function AddParaActions(){
                if(typeof $('.NewPara').select2('data').id != 'undefined' && $('.NewPara').select2('data').id != ""){


                        $.ajax({
                            type: "POST",
                            url: '/app_dev.php/addpara',
                            data: {idpara: $('.NewPara').select2('data').id,
                                idamostra: {{ admin.id(object) is null ? 0 : admin.id(object)}}},
                            contentType: "application/json",
                            success: function (data) {
                                alert(data);
                                $("#parametros_grid").bootgrid("destroy");
                                GetParametros();

                            }
                        });


                }
            }
            function UpdateParaActions(URL){
                var _old = rowIds.slice(0);
                $.each(_ParaData, function( index, value ) {
                    $.each(rowIds, function( index1, value1 ) {
                        if(URL.indexOf("completepara")>= 0){
                            if(value.id == value1){
                                if(value.ft_codigo == "C"){
                                    rowIds.splice(index1,1);
                                }
                            }
                        }
                        if(URL.indexOf("reopenpara")>= 0){
                            if(value.id == value1){
                                if(value.ft_codigo == "D"){
                                    rowIds.splice(index1,1);
                                }
                            }
                        }
                        if(URL.indexOf("cancelpara")>= 0){
                            if(value.id == value1){
                                if(value.ft_codigo == "X"){
                                    rowIds.splice(index1,1);
                                }
                            }
                        }
                    });
                });

                if(rowIds.length != 0){
                    $.ajax({
                        type: "POST",
                        url: URL,
                        data: JSON.stringify(rowIds),
                        contentType: "application/json",
                        success: function(data) {
                            $("#parametros_grid").bootgrid("destroy");
                            rowIds.length = 0;
                            GetParametros();

                        }
                    });
                }
                rowIds = _old;

            }
            function GetParametros(){
                $.ajax({
                    type: "POST",
                    url: '{{path('AmostrasGetParametros')}}',
                    data: {data: {{ admin.id(object) is null ? 0 : admin.id(object)}} },
                    success: function(data) {
                        
                        $("#parametros_grid").bootgrid("destroy");

                        var grid_para = $("#parametros_grid").bootgrid({
                            navigation:0,
                            selection: true,
                            multiSelect: true,
                            rowSelect: true,
                            keepSelection: true
                        }).on("selected.rs.jquery.bootgrid", function(e, rows)
                        {
                            for (var i = 0; i < rows.length; i++)
                            {
                                rowIds.push(rows[i].id);
                            }
                        }).on("deselected.rs.jquery.bootgrid", function(e, rows)
                        {
                            for (var i = 0; i < rows.length; i++)
                            {
                                $.each(rowIds, function( index, value ) {
                                    if(value == rows[i].id){
                                        rowIds.splice(index,1);
                                    }
                                });


                            }
                        }).on("click.rs.jquery.bootgrid", function (e,rows,row)
                        {

                            GetAllMetodo(row.idparametro);
                            GetCicloPorParametro(row.idparametro);
                            GetResultadoPorParametro(row.idparametro);
                            GetParametroData(row.idparametro);
                            selectedRows = rows;
                        });
                        var obj = $.parseJSON(data);
                        _ParaData= obj;
                        if (obj.length != 0) {
                            grid_para.bootgrid("append",obj );
                            $.each(obj, function (key, value) {

                            });
                        } else {

                        }
                    }
                });
            }
            function GetAllPara(){
                $.ajax({
                    type: "POST",
                    url: "/app_dev.php/GetAllPara",
                    dataType: 'json',
                    success: function(data) {
                        $('.NewParaDiv').append("<select  class='NewPara'><option></option></select>");

                        $.each(data, function(index, value) {
                            $('.NewPara').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });
                        $(".NewPara").select2({
                            placeholder: "Seleccione um parametros a adicionar",
                            allowClear: true
                        });
                    }
                });
            }
            function GetAllUnidades(){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllUnidadesMedida') }}",
                    dataType: 'json',
                    success: function(data) {
                        $('.NewUnidadesDiv').append("<select  class='NewUnidades'><option></option></select>");

                        $.each(data, function(index, value) {
                            $('.NewUnidades').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });
                        $(".NewUnidades").select2({
                            placeholder: "Seleccione uma unidade de medida",
                            allowClear: true
                        });
                    }
                });
            }
            function GetAllFamilias(){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllFamilias') }}",
                    dataType: 'json',
                    success: function(data) {
                        $('.familiadiv').append("<select  class='familia'><option></option></select>");
                        $.each(data, function(index, value) {
                            $('.familia').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });

                        $(".familia").select2({
                            placeholder: "Seleccione uma Familia",
                            allowClear: true
                        });
                    }
                });
            }
            //get laboratorios
            function GetAllLaboratorios(){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllLaboratorios') }}",
                    dataType: 'json',
                    success: function(data) {
                        $('.laboratoriodiv').append("<select  class='laboratirio'><option></option></select>");
                        $.each(data, function(index, value) {
                            $('.laboratirio').append(
                                    '<option value="' + value.fnId + '">' + value.ftNome + '</option>'
                            );
                        });
                        $(".laboratirio").select2({
                            placeholder: "Seleccione um laboratorio",
                            allowClear: true
                        });
                    }
                });
            }
            //get area ensaio
            function GetAllEnsaio(){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllArea') }}",
                    dataType: 'json',
                    success: function(data) {
                        $('.areaensaiodiv').append("<select  class='areaensaio'><option></option></select>");
                        $.each(data, function(index, value) {
                            $('.areaensaio').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });

                        $(".areaensaio").select2({
                            placeholder: "Seleccione uma area de ensaio",
                            allowClear: true
                        });
                    }
                });
            }
            //get metodo
            function GetAllMetodo(_idpara){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllMetodo') }}",
                    data: {data: _idpara  },
                    success: function(data) {
                        $(".metodo").select2('destroy');
                        $(".metododiv .metodo").remove();
                        data  = JSON.parse(data);
                        $('.metododiv').append("<select  class='metodo'><option></option></select>");
                        $.each(data, function(index, value) {
                            $('.metodo').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });
                        $(".metodo").select2({
                            placeholder: "Seleccione um metodo",
                            allowClear: true
                        }).on("change", function(e) {
                            GetTecnicaByMetodo(e.val);
                        });
                    }
                });
            }
            //get grupo by modelo selection
            //get metodo
            function GetGrupoByModelo(_modelo){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetGrupoByModelo') }}",
                    data: {data: _modelo  },
                    success: function(data) {
                        data = JSON.parse(data);
                        $("._grupoparametros").select2("val", data[0].fnId);

                    }
                });
            }
            function GetTecnicaByMetodo(_idmetodo){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetTecnicaByMetodo') }}",
                    data: {data: _idmetodo  },
                    dataType: 'json',
                    success: function(data) {
                        if(data.length != 0){
                            $(".tecnica").select2("val", data[0].tecnica);
                            $('.tecnica').select2("enable",false);
                        }

                    }
                });
            }
            //get tecnica
            function GetAllTecnica(){
                $.ajax({
                    type: "POST",
                    url: "{{ path('GetAllTecnica') }}",
                    dataType: 'json',
                    success: function(data) {
                        $('.tecnicadiv').append("<select  class='tecnica'></select>");
                        $.each(data, function(index, value) {
                            $('.tecnica').append(
                                    '<option value="' + value.fnId + '">' + value.ftDescricao + '</option>'
                            );
                        });
                        $(".tecnica").select2();
                    }
                });
            }
            function GetCicloPorParametro(_id_Para){

                $.ajax({
                    type: "POST",
                    url: '{{path('AmostrasGetCicloVidaPorPara')}}',
                    data: {data: _id_Para  },
                    success: function(data) {
                        $('.table_ciclo_para tbody').html("");
                        var obj = $.parseJSON(data);
                        if (obj.length != 0) {
                            var html = "";
                            var estado = "";
                            var bullet = "";
                            $.each(obj, function (key, value) {
                                if(value.ft_id_estado == 'I'){
                                    estado = 'Indisponivel';
                                    bullet = "bullet-gray";
                                }
                                if(value.ft_id_estado == 'V'){
                                    estado = 'Disponivel';
                                    bullet = "bullet-gray";
                                }
                                if(value.ft_id_estado == 'D'){
                                    estado = 'Em Progresso';
                                    bullet = "bullet-yellow";
                                }
                                if(value.ft_id_estado == 'P'){
                                    estado = 'Planeada';
                                    bullet = "bullet-blue";
                                }
                                if(value.ft_id_estado == 'C'){
                                    estado = 'Completo';
                                    bullet = "bullet-green";
                                }
                                if(value.ft_id_estado == 'X'){
                                    estado = 'Cancelada';
                                    bullet = "bullet-pink";
                                }
                                html += '<tr><td><span class="'+ bullet +'"></span>'+ estado +'</td><td>'+ value.date  +'</td><td>'+value.user +'</td></tr>'

                            });
                            $('.table_ciclo_para tbody').append(html);
                        } else {

                        }
                    }
                });
            }
            function GetResultadoPorParametro(_id_Para){
                $.ajax({
                    type: "POST",
                    url: '{{path('AmostrasGetUnidadePorPara')}}',
                    data: {data: _id_Para  },
                    success: function(data) {
                        var obj = $.parseJSON(data);
                        if (obj.length != 0) {
                            $(".NewUnidades").select2("val", obj[0].fn_id_unidade);
                            $("#_valororiginal").val(obj[0].ft_original);
                            $("#_valorformatado").val(obj[0].ft_formatado);
                            $("#_idresultado").val(obj[0].fn_id);
                            $("#_idparametro").val(obj[0].fn_id_parametro);


                            if(obj[0].fb_incluirnorelatorio != null){
                                $("#_incluirelatorio").prop('checked', true);
                            }
                        }
                    }
                });
            }
            function GetParametroData(_id_Para){
                $.ajax({
                    type: "POST",
                    url: '{{path('AmostrasGetParametro')}}',
                    data: {data: _id_Para  },
                    success: function(data) {
                        var obj = $.parseJSON(data);
                        if (obj.length != 0) {

                            $("#_nomeparametro").val(obj[0].ft_descricao);

                            $(".familia").select2("val", obj[0].fn_id_familiaparametro);


                            $("#_custommethod").val(obj[0].ft_custommethod);
                            if(obj[0].ft_custommethod != null && obj[0].ft_custommethod != ""){
                                $("#_custommethod").show();
                                $(".metododiv").hide();
                                $(".tecnicadiv").hide();
                                $(".labelformetododiv").hide();
                                $(".labelfortecnicadiv").hide();
                                $('#_outrometodo').iCheck('check');
                                $("#_outrometodo").prop('checked', true);
                            }else{
                                $(".metododiv").show();
                                $(".tecnicadiv").show();
                                $(".labelformetododiv").show();
                                $(".labelfortecnicadiv").show();
                                $('#_outrometodo').iCheck('uncheck');
                                $("#_outrometodo").prop('checked', false);
                            }

                            $("#_modeloparametro").val(obj[0].modelodepara);
                            $("#_formulaquimica").val(obj[0].ft_formulaquimica);
                            $("#_idmodeloparametro").val(obj[0].fn_id_modeloparametro);
                            $("#_idparametroData").val(obj[0].id);


                            $(".laboratirio").select2("val", obj[0].fn_id_laboratorio);


                            $(".areaensaio").select2("val", obj[0].fn_id_areaensaio);


                            $(".metodo").select2("val", obj[0].fn_id_metodo);

                            GetTecnicaByMetodo(obj[0].fn_id_metodo);
                            //$(".tecnicadiv").val("val", obj[0].fn_id_tecnica);

                            $("#_compra").val(obj[0].fn_precocompra);
                            $("#_venda").val(obj[0].fn_precovenda);
                            $("#_fator").val(obj[0].fn_factorcorreccao);

                            $("#_conclusao").val(obj[0].ft_conclusao);
                            $("#_observacoes").val(obj[0].ft_observacao);

                            if(obj[0].fb_confirmacao == 1){
                                $('#_confirmacao').iCheck('check');
                                $("#_confirmacao").prop('checked', true);
                            }else{
                                $('#_confirmacao').iCheck('uncheck');
                                $("#_confirmacao").prop('checked', false);
                            }
                            if(obj[0].fb_contraanalise == 1){
                                $('#_contraanalise').iCheck('check');
                                $("#_contraanalise").prop('checked', true);
                            }else{
                                $('#_contraanalise').iCheck('uncheck');
                                $("#_contraanalise").prop('checked', false);
                            }
                            if(obj[0].fb_amostraexterno == 1){
                                $('#_ambexterno').iCheck('check');
                                $("#_ambexterno").prop('checked', true);
                            }else{
                                $('#_ambexterno').iCheck('uncheck');
                                $("#_ambexterno").prop('checked', false);
                            }
                            if(obj[0].fb_amostrainterno == 1){
                                $('#_ambinterno').iCheck('check');
                                $("#_ambinterno").prop('checked', true);
                            }else{
                                $('#_ambinterno').iCheck('uncheck');
                                $("#_ambinterno").prop('checked', false);
                            }
                            if(obj[0].fb_determinacaoexterno == 1){
                                $('#_deterexterno').iCheck('check');
                                $("#_deterexterno").prop('checked', true);
                            }else{
                                $('#_deterexterno').iCheck('uncheck');
                                $("#_deterexterno").prop('checked', false);
                            }
                            if(obj[0].fb_determinacaointerno == 1){
                                $('#_deterinterno').iCheck('check');
                                $("#_deterinterno").prop('checked', true);
                            }else{
                                $('#_deterinterno').iCheck('uncheck');
                                $("#_deterinterno").prop('checked', false);
                            }

                            if(obj[0].fb_incluirnorelatorio != null){
                                $("#_incluirelatorio").prop('checked', true);
                            }else{
                                $("#_incluirelatorio").prop('checked', false);
                            }
                        }
                    }
                });
            }
            function Savedata(){
                var atLeastOneIsChecked = $('#_outrometodo:checkbox:checked').length;
                var _metodo = null;
                var _tecnica = null;
                if(atLeastOneIsChecked == 0){
                    $("#_custommethod ").val("");
                    _metodo = $(".metodo").select2('data').id;
                    _tecnica = $(".tecnica").select2('data').id;
                }else{

                }
                var arr = [$("#_amostra").val(),$("#_idparametro").val() , $("#_valorformatado").val() , $("#_valororiginal").val(), $(".NewUnidades").select2('data').id];
                var arr2 = [ $("#_idparametro").val(),$("#_formulaquimica").val(), $(".familia").select2('data').id,$(".laboratirio").select2('data').id, $(".areaensaio").select2('data').id , _metodo , _tecnica, $('#_confirmacao:checkbox:checked').length > 0 ? 1 : 0, $('#_contraanalise:checkbox:checked').length > 0 ? 1 : 0,  $('#_compra').val(), $('#_venda').val() , $('#_fator').val(), $('#_conclusao').val() , $('#_observacoes').val() ,$('#_ambexterno:checkbox:checked').length > 0 ? 1 : 0,$('#_ambinterno:checkbox:checked').length > 0 ? 1 : 0,$('#_deterexterno:checkbox:checked').length > 0 ? 1 : 0,$('#_deterinterno:checkbox:checked').length > 0 ? 1 : 0 ,$("#_custommethod ").val()];

                $.ajax({
                    type: "POST",
                    url: '{{path('EntradaResultadossetByRegrasFormatacaoAmostra')}}',
                    data: JSON.stringify(arr),
                    success: function(data) {
                        if(data > 0){
                            alert("Resultados Guardados com sucesso");
                            GetParametros();
                        }else{
                            alert("Resultado não guardado");
                        }
                    }
                });
                $.ajax({
                    type: "POST",
                    url: '{{path('SaveParaporAmostra')}}',
                    data: JSON.stringify(arr2),
                    success: function(data) {
                        if(data > 0){
                            alert("Resultados Guardados com sucesso");
                            GetParametros();
                        }else{
                            alert("Resultado não guardado");
                        }
                    }
                });

            }
            $( document ).ready(function() {


                $('#_outrometodo').on('ifChecked',
                        function(event){
                            $("#_custommethod").show();
                            $(".metododiv").hide();
                            $(".tecnicadiv").hide();
                            $(".labelformetododiv").hide();
                            $(".labelfortecnicadiv").hide();

                        }).on('ifUnchecked',
                        function(event){
                            $("#_custommethod").hide();
                            $(".metododiv").show();
                            $(".tecnicadiv").show();
                            $(".labelformetododiv").show();
                            $(".labelfortecnicadiv").show();
                        });



                //valor original do resultado altera
                $('#_valororiginal').focus(function() {
                    _oldoriginalvalue = $(this).val();
                    $(this).val("");
                });
                $('#_valororiginal').focusout(function() {
                    if($("#_valororiginal").val() == ''){
                        $("#_valororiginal").val(_oldoriginalvalue);
                    }else{
                        $.ajax({
                            type: "POST",
                            url: '{{path('EntradaResultadosgetByRegrasFormatacao')}}',
                            data: {data1 : $("#_amostra").val() , data2 :$("#_idparametro").val() },
                            success: function(data) {
                                var obj = $.parseJSON(data);
                                var val_down = 0;
                                var val_up = 0;
                                var validate = false;
                                if(obj.condi.length !=0) {
                                    $.each(obj.condi, function( index, value ) {
                                        val_down = value.fn_limiteinferior;
                                        val_up = value.fn_limitesuperior;
                                        if(parseFloat($("#_valororiginal").val().replace(',','.').replace(' ','')) > parseFloat(val_down.replace(',','.').replace(' ','')) && parseFloat($("#_valororiginal").val().replace(',','.').replace(' ','')) < parseFloat(val_up.replace(',','.').replace(' ',''))){
                                            $("#_valorformatado").val(value.ft_expressaoutilizador);
                                            validate = true;
                                        }
                                    });
                                }
                                if(validate == false){
                                    $("#_valorformatado").val($("#_valororiginal").val());
                                }
                            }
                        });
                    }
                });

                //GET o Ciclo de vida da amostra no arranque
                $.ajax({
                    type: "POST",
                    url: '{{path('AmostrasGetCicloVida')}}',
                    data: {data: {{ admin.id(object) is null ? 0 : admin.id(object)}} },
                    success: function(data) {
                        var obj = $.parseJSON(data);
                        if (obj.length != 0) {
                            var html = "";
                            var estado = "";
                            var bullet = "";
                            $.each(obj, function (key, value) {
                                if(value.ft_id_estado == 'I'){
                                    estado = 'Indisponivel';
                                    bullet = "bullet-gray";

                                }
                                if(value.ft_id_estado == 'V'){
                                    estado = 'Disponivel';
                                    bullet = "bullet-gray";
                                }
                                if(value.ft_id_estado == 'D'){
                                    estado = 'Em Progresso';
                                    bullet = "bullet-yellow";
                                }
                                if(value.ft_id_estado == 'P'){
                                    estado = 'Planeada';
                                    bullet = "bullet-blue";

                                }
                                if(value.ft_id_estado == 'C'){
                                    estado = 'Completo';
                                    bullet = "bullet-green";
                                }
                                if(value.ft_id_estado == 'X'){
                                    estado = 'Cancelada';
                                    bullet = "bullet-pink";
                                }
                                html += '<tr><td><span class="'+ bullet +'"></span>'+ estado +'</td><td>'+ value.updated_by_time +'</td><td>'+value.updated_by +'</td></tr>'

                            });
                            $('.table_ciclo tbody').append(html);
                        } else {

                        }
                    }
                });

                GetParametros();
                GetAllPara();
                GetAllUnidades();
                GetAllFamilias();
                GetAllLaboratorios();
                GetAllEnsaio();
                GetAllMetodo();
                GetAllTecnica();
            });
        </script>



        {% if admin.id(object) is null or ( admin.id(object) is not null and (object.ftEstado.ftId == 'P'
        or object.ftEstado.ftId == 'I')) %}

            <script>
                $( document ).ready(function() {

                    $( "#tabs_Amostra" ).tabs( "option","disabled", [1]);
                });


            </script>
        {% endif %}


        <script>
            $( document ).ready(function() {



                $( ".Lote_amostra .form-group .form-group" ).each(function() {
                    $( this ).addClass( "col-md-6" );
                });

                $( ".Dados_amostra > .box.box-success > .box-body > .sonata-ba-collapsed-fields > .form-group" ).addClass( "col-md-4" );

            })
        </script>


        <div id="tabs_Amostra" style="padding: 0;">
            <ul>
                <li><a href="#tabs-3">Ciclo de Vida</a></li>
                <li><a href="#tabs-2">Parâmetros</a></li>
                <li><a href="#tabs-1">Identificação</a></li>

            </ul>
            <div id="tabs-1">
                <form class=""
                      {% if admin_pool.getOption('form_type') == 'horizontal' %}class="form-horizontal"{% endif %}
                      role="form"
                      action="{{ admin.generateUrl(url, {'id': admin.id(object), 'uniqid': admin.uniqid, 'subclass': app.request.get('subclass')}) }}" {{ form_enctype(form) }}
                      method="POST"
                        {% if not admin_pool.getOption('html5_validate') %}novalidate="novalidate"{% endif %}
                        >
                    {% if form.vars.errors|length > 0 %}
                        <div class="sonata-ba-form-error">
                            {{ form_errors(form) }}
                        </div>
                    {% endif %}

                    {% block sonata_pre_fieldsets %}
                    <div class="row">
                        {% endblock %}
                        {% block sonata_tab_content %}
                            {% set has_tab = ((admin.formtabs|length == 1 and admin.formtabs|keys[0] != 'default') or admin.formtabs|length > 1 ) %}

                            <div class="col-md-13" style="margin-top: 40px;">
                                {% if has_tab %}
                                    <div class="nav-tabs-custom">
                                        <ul class="nav nav-tabs" role="tablist">
                                            {% for name, form_tab in admin.formtabs %}
                                                <li{% if loop.index == 1 %} class="active"{% endif %}><a href="#tab_{{ loop.index }}" data-toggle="tab"><span class="glyphicon glyphicon-exclamation-sign has-errors hide"></span> {{ admin.trans(name, {}, form_tab.translation_domain) }}</a></li>
                                            {% endfor %}
                                        </ul>

                                        <div class="tab-content">
                                            {% for code, form_tab in admin.formtabs %}
                                                <div class="tab-pane fade{% if loop.first %} in active{% endif %}" id="tab_{{ loop.index }}">
                                                    <div class="box-body  container-fluid">
                                                        <div class="sonata-ba-collapsed-fields">

                                                            {% if form_tab.description != false %}
                                                                <p>{{ form_tab.description|raw }}</p>
                                                            {% endif %}

                                                            {{ form_helper.render_groups(admin, form, form_tab['groups'], has_tab) }}
                                                        </div>
                                                    </div>
                                                </div>
                                            {% endfor %}
                                        </div>



                                    </div>
                                {% else %}

                                    {{ form_helper.render_groups(admin, form, admin.formtabs['default'].groups, has_tab) }}
                                {% endif %}
                            </div>
                        {% endblock %}
                        {% block sonata_post_fieldsets %}
                    </div>
                    {% endblock %}

                    {{ form_rest(form) }}

                    {% block formactions %}
                        <div class="well well-small form-actions text-center">
                            {% if app.request.isxmlhttprequest %}
                                {% if admin.id(object) is not null %}

                                    <button type="submit" class="btn btn-success" name="btn_update"><i class="fa fa-save"></i> {{ 'btn_update'|trans({}, 'SonataAdminBundle') }}</button>
                                {% else %}

                                    <button type="submit" class="btn btn-success" name="btn_create"><i class="fa fa-plus-circle"></i> {{ 'btn_create'|trans({}, 'SonataAdminBundle') }}</button>
                                {% endif %}
                            {% else %}
                                {% if admin.supportsPreviewMode %}
                                    <button class="btn btn-info persist-preview" name="btn_preview" type="submit">
                                        <i class="fa fa-eye"></i>
                                        {{ 'btn_preview'|trans({}, 'SonataAdminBundle') }}
                                    </button>
                                {% endif %}
                                {% if admin.id(object) is not null %}

                                    <button type="submit" class="btn btn-success" name="btn_update_and_edit"><i class="fa fa-save"></i> {{ 'btn_update_and_edit_again'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% if admin.hasroute('list') and admin.isGranted('LIST') %}
                                        <button type="submit" class="btn btn-success" name="btn_update_and_list"><i class="fa fa-chevron-circle-left"></i> {{ 'btn_update_and_return_to_list'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}

                                    {% if admin.hasroute('delete') and admin.isGranted('DELETE', object) %}

                                        {% set currentPath = path(app.request.attributes.get('_route'),
                                        app.request.attributes.get('_route_params')) %}

                                        <a target="_blank" class="btn generateworklist" href="/generateworklist/{{ admin.id(object)  }}"><i class="fa fa-list"></i> Gerar lista de trabalho</a>
                                        <a target="_blank" class="btn generateworklist" href="/completesample/{{ admin.id(object)  }}"><i class="fa fa-check-circle"></i> Autorizar </a>
                                        <a target="_blank" class="btn generateworklist" href="/reopensample/{{ admin.id(object)  }}"><i class="fa fa-exclamation-circle"></i> Desautorizar </a>
                                        <a target="_blank" class="btn generateworklist" href="/cancelsample/{{ admin.id(object)  }}"><i class="fa fa-ban"></i> Cancelar </a>
                                        <a target="_blank" class="btn generateworklist" href="/relatorio/emit"><i class="fa fa-file-text"></i> Emitir Relatório </a>
                                        <a target="_blank" class="btn generateworklist" href="/notifysample/{{ admin.id(object)  }}"><i class="fa fa-envelope"></i> Notificar Cliente </a>

                                        <a class="btn btn-danger" href="{{ admin.generateObjectUrl('delete', object) }}"><i class="fa fa-minus-circle"></i> {{ 'link_delete'|trans({}, 'SonataAdminBundle') }}</a>


                                    {% endif %}

                                    {% if admin.isAclEnabled() and admin.hasroute('acl') and admin.isGranted('MASTER', object) %}
                                        <a class="btn btn-info" href="{{ admin.generateObjectUrl('acl', object) }}"><i class="fa fa-users"></i> {{ 'link_edit_acl'|trans({}, 'SonataAdminBundle') }}</a>
                                    {% endif %}
                                {% else %}
                                    {% if admin.hasroute('edit') and admin.isGranted('EDIT') %}
                                        <button class="btn btn-success" type="submit" name="btn_create_and_edit"><i class="fa fa-save"></i> {{ 'btn_create_and_edit_again'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}
                                    {% if admin.hasroute('list') and admin.isGranted('LIST') %}
                                        <button type="submit" class="btn btn-success" name="btn_create_and_list"><i class="fa fa-chevron-circle-left"></i> {{ 'btn_create_and_return_to_list'|trans({}, 'SonataAdminBundle') }}</button>
                                    {% endif %}
                                    <button class="btn btn-success" type="submit" name="btn_create_and_create"><i class="fa fa-plus-circle"></i> {{ 'btn_create_and_create_a_new_one'|trans({}, 'SonataAdminBundle') }}</button>
                                {% endif %}
                            {% endif %}
                        </div>
                    {% endblock formactions %}
                </form>
            </div>
            <div id="tabs-2" >
                <div class="row">
                    <div class="col-md-6">
                        <table id="parametros_grid" class="table table-condensed table-hover table-striped">
                            <thead>
                            <tr>
                                <th data-width="60" data-column-id="id" data-type="numeric" data-identifier="true">ID</th>
                                <th data-width="40" data-column-id="ft_codigo" data-type="numeric" >E</th>
                                <th data-column-id="resultado">Parâmetro</th>
                                <th data-column-id="parametros" >Resultado</th>
                                <th data-column-id="ft_formatado">Valor</th>
                                <th data-column-id="unidades">Unidades</th>
                                <th data-column-id="ft_texto_relatorio">Limite</th>
                            </tr>
                            </thead>
                        </table>

                        <div class="NewParaDiv"></div>
                        <a target="_blank" class="btn generateworklist" style="margin-top: 10px!important;" onclick="AddParaActions()"><i class="fa fa-plus-circle"></i> Adicionar </a>

                    </div>
                    <div class="col-md-6">
                        <div id="tabs2">
                            <ul>
                                <li><a href="#tabs-6">Ciclo de Vida</a></li>
                                <li><a href="#tabs-5">Resultado</a></li>
                                <li><a href="#tabs-4">Geral</a></li>
                            </ul>
                            <div id="tabs-4">

                                <div class="form-group x1 col-md-6" style="padding-bottom: 30px;">
                                    <p style="padding-top: 30px;">Execução:</p>
                                    <label for="_nomeparametro">ID</label>
                                    <input type="text" class="form-control" id="_idparametroData" disabled>
                                    <label for="_nomeparametro">Nome</label>
                                    <input type="text" class="form-control" id="_nomeparametro" disabled>
                                    <label for="_idmodeloparametro">Modelo</label>
                                    <input type="text" class="form-control" id="_idmodeloparametro" disabled>
                                    <input type="text" class="form-control" id="_modeloparametro" disabled>
                                    <label for="_formulaquimica">Fórmula Química</label>
                                    <input type="text" class="form-control" id="_formulaquimica" >
                                    <label for="_valororiginal">Família</label>
                                    <div class="familiadiv"></div>
                                    <label for="laboratoriodiv" style="padding-top: 22px;">Laboratório</label>
                                    <div class="laboratoriodiv" style="margin-bottom: 25px!important;"></div>
                                    <label for="areaensaiodiv" >Área de ensaio</label>
                                    <div class="areaensaiodiv" style="margin-bottom: 25px!important;"></div>

                                    <label for="_outrometodo" class="" style="float: left;width: 90%;margin-bottom: 15px;">Outro Metodo</label>
                                    <input type="checkbox" class="form-control" id="_outrometodo" >

                                    <input style="display: none;" type="text" class="form-control" id="_custommethod">

                                    <label for="metododiv" class="labelformetododiv">Método</label>
                                    <div class="metododiv" style="margin-bottom: 25px!important;"></div>
                                    <label for="tecnicadiv" class="labelfortecnicadiv">Técnica</label>
                                    <div class="tecnicadiv" style="margin-bottom: 25px!important;"></div>

                                    <label for="_confirmacao" class="col-md-7 no-padding">Confirmação</label>
                                    <input type="checkbox" class="form-control" id="_confirmacao" >
                                    <label for="_contraanalise" class="col-md-7 no-padding">Contra Análise</label>
                                    <input type="checkbox" class="form-control" id="_contraanalise" >
                                </div>

                                <div class="form-group col-md-6">
                                    <p style="padding-top: 30px;">Preço:</p>
                                    <label for="_compra">Compra</label>
                                    <input type="text" class="form-control" id="_compra" >
                                    <label for="_venda">Venda</label>
                                    <input type="text" class="form-control" id="_venda" >
                                    <label for="_fator">Fator</label>
                                    <input type="text" class="form-control" id="_fator" >
                                </div>
                                <div class="form-group x2 col-md-6">
                                    <p style="padding-top: 22px;">Acreditação Amostragem:</p>
                                    <label for="_confirmacao" class="col-md-7 no-padding">Âmbito Interno</label>
                                    <input type="checkbox" class="form-control" id="_ambinterno" >
                                    <label for="_contraanalise" class="col-md-7 no-padding">Âmbito Externo</label>
                                    <input type="checkbox" class="form-control" id="_ambexterno" >
                                </div>
                                <div class="form-group x3 col-md-6">
                                    <p style="padding-top: 22px;">Acreditação Determinação:</p>
                                    <label for="_confirmacao" class="col-md-7 no-padding">Âmbito Interno</label>
                                    <input type="checkbox" class="form-control" id="_deterinterno" >
                                    <label for="_contraanalise" class="col-md-7 no-padding">Âmbito Externo</label>
                                    <input type="checkbox" class="form-control" id="_deterexterno" >
                                </div>

                                <div class="form-group col-md-6" style="padding-top: 35px;">
                                    <label for="_fator">Conclusão</label>
                                    <input type="text" class="form-control" id="_conclusao" >
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="_fator">Observações</label>
                                    <input type="text" class="form-control" id="_observacoes" >
                                </div>


                            </div>
                            <div id="tabs-5">
                                <p style="padding-top: 22px;">Resultado:</p>
                                <div class="checkbox disabled">
                                    <label>
                                        <input type="checkbox" id="_incluirelatorio" value="" disabled>
                                        Incluir no relatório
                                    </label>
                                </div>

                                <label>

                                    Unidade de Medida
                                </label>
                                <div class="NewUnidadesDiv"></div>

                                <div class="form-group">
                                    <input type="hidden"  id="_idresultado" >
                                    <input type="hidden"  id="_idparametro" >
                                    <input type="hidden"  id="_amostra" value="{{ admin.id(object) is null ? 0 : admin.id(object)}}" >

                                    <label for="_valororiginal">Original</label>
                                    <input type="text" class="form-control" id="_valororiginal" >
                                    <label for="_valorformatado">Formatado</label>
                                    <input type="text" class="form-control" id="_valorformatado" disabled>
                                    <label for="_conclusao">Conclusão</label>
                                    <input type="text" class="form-control" id="_conclusao" disabled>
                                </div>
                            </div>
                            <div id="tabs-6">
                                <div class="table-padding">
                                    <table class="hover table_ciclo_para">
                                        <thead>
                                        <tr>
                                            <th width="100">Estado</th>
                                            <th width="100">Data</th>
                                            <th width="150">Utilizador</th>
                                        </tr>
                                        </thead>
                                        <tbody>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                    </div>
                </div>
                </div>
                <div class="well well-small form-actions large-16 medium-16 form-group visivel text-center">
                    <a target="_blank" class="btn generateworklist" onclick="UpdateParaActions('/completepara')"><i class="fa fa-check-circle"></i> Autorizar </a>
                    <a target="_blank" class="btn generateworklist" onclick="Savedata()"><i class="fa fa-save"></i> Guardar</a>
                    <a target="_blank" class="btn generateworklist" onclick="UpdateParaActions('/reopenpara')"><i class="fa fa-exclamation-circle"></i> Desautorizar </a>
                    <a target="_blank" class="btn btn-danger" onclick="UpdateParaActions('/cancelpara')"><i class="fa fa-minus-circle"></i> Eliminar</a>

                </div>
            </div>
            <div id="tabs-3">
                <div class="table-padding">
                    <table class="hover table_ciclo large-15 medium-15">
                        <thead>
                        <tr>
                            <th width="100">Estado</th>
                            <th width="100">Data</th>
                            <th width="150">Utilizador</th>
                        </tr>
                        </thead>
                        <tbody>
                        </tbody>
                    </table>
                </div>

            </div>
        </div>


    <style>

        #parametros_grid{
            margin-top: 18px;
        }

    </style>
<script>

    $( document ).ready(function() {

        $("._grupoparametros").on('select2-loaded', function (e) {
            $('._grupoparametros').select2('disable');

        });
        $('._modeloamostra').on("select2-selecting", function(e) {
            GetGrupoByModelo(e.val);
        });

    });
</script>


<style>
        {% if 'edit' in admin.request.pathInfo %}
        .Cliente_amostra .select2-container{
            width: 78% !important;
        }
        {% endif %}

    </style>

    {% endif%}

    {{ sonata_block_render_event('sonata.admin.edit.form.bottom', { 'admin': admin, 'object': object }) }}


{% endblock %}

